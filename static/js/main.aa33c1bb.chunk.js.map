{"version":3,"sources":["components/Goods.js","components/ListOfGoods.js","components/ButtonStart.js","App.js","index.js"],"names":["Goods","_ref","product","react_default","a","createElement","ListOfGoods","goodsArray","Fragment","map","item","index","key","ButtonStart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","show","selectValue","updateShow","bind","assertThisInitialized","Reverse","SortAlph","Reset","SortByLength","handleSubmit","ChangeSelect","event","setState","target","value","toConsumableArray","goodsFromServer","reversArray","reverse","SortByAlphabetically","sort","b","length","_this2","preventDefault","longerThen","filter","_this$state","labelStart","type","onClick","onSubmit","name","onChange","size","disabled","components_ListOfGoods","Component","App","className","components_ButtonStart","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.aa33c1bb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Goods({ product }) {\n  return (\n    <li>{product}</li>\n  );\n}\n\nGoods.propTypes = {\n  product: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Goods from './Goods';\n\nfunction ListOfGoods({ goodsArray }) {\n  return (\n    <>\n      {goodsArray.map(\n        (item, index) => <Goods product={item} key={item} />\n      )}\n    </>\n  );\n}\n\nListOfGoods.propTypes = {\n  goodsArray: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ListOfGoods;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ListOfGoods from './ListOfGoods';\n\nclass ButtonStart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      goodsArray: [],\n      selectValue: 1,\n    };\n\n    this.updateShow = this.updateShow.bind(this);\n    this.Reverse = this.Reverse.bind(this);\n    this.SortAlph = this.SortAlph.bind(this);\n    this.Reset = this.Reset.bind(this);\n    this.SortByLength = this.SortByLength.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.ChangeSelect = this.ChangeSelect.bind(this);\n  }\n\n  ChangeSelect(event) {\n    this.setState({ selectValue: event.target.value });\n  }\n\n  updateShow() {\n    this.setState({\n      show: true,\n      goodsArray: [...this.props.goodsFromServer],\n    });\n  }\n\n  Reverse() {\n    const reversArray = [...this.props.goodsFromServer].reverse();\n\n    this.setState({\n      goodsArray: reversArray,\n    });\n  }\n\n  SortAlph() {\n    const SortByAlphabetically = [...this.props.goodsFromServer].sort();\n\n    this.setState({\n      goodsArray: SortByAlphabetically,\n    });\n  }\n\n  Reset() {\n    this.setState({\n      goodsArray: this.props.goodsFromServer,\n      selectValue: 1,\n    });\n  }\n\n  SortByLength() {\n    const SortByAlphabetically = [...this.props.goodsFromServer].sort(\n      (a, b) => b.length - a.length\n    );\n\n    this.setState({\n      goodsArray: SortByAlphabetically,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const longerThen = [...this.props.goodsFromServer].filter(\n      item => item.length >= this.state.selectValue\n    );\n\n    this.setState({\n      goodsArray: longerThen,\n    });\n  }\n\n  render() {\n    const { show, goodsArray } = this.state;\n    const { labelStart } = this.props;\n\n    return (\n      <>\n        {\n          !show && (\n            <button\n              type=\"button\"\n              onClick={this.updateShow}\n            >\n              {labelStart}\n            </button>\n          )\n        }\n        {show && (\n          <>\n            <button\n              type=\"button\"\n              onClick={this.Reverse}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.SortAlph}\n            >\n              SortAlphabetically\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.Reset}\n            >\n              Reset\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.SortByLength}\n            >\n              SortByLength\n            </button>\n            <form onSubmit={this.handleSubmit}>\n              <select\n                name=\"number\"\n                onChange={this.ChangeSelect}\n                size=\"5\"\n                value={this.state.selectValue}\n              >\n                <option disabled>choose length</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n              <input type=\"submit\" value=\"Отправить\" />\n            </form>\n            <ListOfGoods\n              goodsArray={goodsArray}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nButtonStart.propTypes = {\n  labelStart: PropTypes.string.isRequired,\n  goodsFromServer: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ButtonStart;\n","import React from 'react';\nimport './App.css';\nimport ButtonStart from './components/ButtonStart';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Goods 1</h1>\n    <section>\n      <ButtonStart\n        goodsFromServer={goodsFromServer}\n        labelStart=\"Start\"\n      />\n    </section>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}